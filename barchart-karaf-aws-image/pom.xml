<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.barchart.base</groupId>
		<artifactId>barchart-archon</artifactId>
		<version>2.3.2</version>
		<relativePath />
	</parent>

	<groupId>com.barchart.karaf</groupId>
	<artifactId>barchart-karaf-aws-image</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>pom</packaging>

	<description>amazon image builder for karaf base application</description>

	<properties>

		<!-- region-dependent parameters -->
		<stackName>karaf-image-${amazonRegion}-barchart-com</stackName>
		<ParamHostName>karaf-image.${amazonRegion}.aws.barchart.com.</ParamHostName>

		<!-- karaf application to deploy -->
		<karafGroup>com.barchart.karaf</karafGroup>
		<karafArtifact>barchart-karaf-base-app</karafArtifact>
		<karafVersion>1.1.6-SNAPSHOT</karafVersion>
		<karafClassifier>tanuki-distro</karafClassifier>
		<karafType>zip</karafType>

		<!-- karaf application archive file name -->
		<karafFinalName>${karafArtifact}-${karafVersion}-${karafClassifier}.${karafType}</karafFinalName>

		<!-- karaf user config template on local -->
		<karafTemplate>${user.home}/.karaf/barchart-karaf</karafTemplate>

		<!-- location of build resources on local -->
		<publishSource>${basedir}/target/publish</publishSource>
		<!-- location of build resources on remote -->
		<publishTarget>/tmp/publish_${projectTimeFile}</publishTarget>

		<!-- path to install script on remote -->
		<publishInstall>${publishTarget}/install.sh</publishInstall>

	</properties>

	<profiles>

		<profile>

			<id>image-build</id>

			<build>

				<plugins>

					<!-- copy config templates -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<id>publish-prepare</id>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<phase>package</phase>
								<configuration>
									<resources>
										<resource>
											<directory>${basedir}/src/main/script</directory>
											<filtering>true</filtering>
										</resource>
										<resource>
											<directory>${basedir}/src/main/template</directory>
											<filtering>true</filtering>
										</resource>
										<resource>
											<directory>${karafTemplate}</directory>
											<filtering>false</filtering>
										</resource>
									</resources>
									<outputDirectory>${publishSource}</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<!-- copy karaf app distro -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>copy-karaf-app</id>
								<phase>package</phase>
								<goals>
									<goal>copy</goal>
								</goals>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>${karafGroup}</groupId>
											<artifactId>${karafArtifact}</artifactId>
											<version>${karafVersion}</version>
											<classifier>${karafClassifier}</classifier>
											<type>${karafType}</type>
											<destFileName>${karafFinalName}</destFileName>
										</artifactItem>
									</artifactItems>
									<overWriteReleases>true</overWriteReleases>
									<overWriteSnapshots>true</overWriteSnapshots>
									<overWriteIfNewer>true</overWriteIfNewer>
									<outputDirectory>${publishSource}</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<!-- build image -->
					<plugin>

						<groupId>com.carrotgarden.maven</groupId>
						<artifactId>carrot-maven-aws-plugin</artifactId>
						<version>1.1.4</version>

						<configuration>

							<!-- used by cloud formation & elastic compute goals -->
							<amazonRegion>${amazonRegion}</amazonRegion>

							<!-- used by cloud formation goals -->
							<stackName>${stackName}</stackName>
							<stackServerId>barchart-karaf-stack</stackServerId>
							<stackTemplateFile>${publishSource}/karaf-image.template</stackTemplateFile>
							<stackPropertiesInputFile>${publishSource}/karaf-image.properties</stackPropertiesInputFile>
							<stackInputParams>
								<!-- override karaf-image.properties -->
								<ParamHostName>${ParamHostName}</ParamHostName>
							</stackInputParams>

							<!-- used by ssh goals -->
							<sshHost>${ParamHostName}</sshHost>
							<sshKeyFile>${user.home}/.ssh/barchart-karaf/barchart-karaf.pem</sshKeyFile>

							<!-- used by elastic compute goals -->
							<computeServerId>barchart-karaf-compute</computeServerId>
							<imageName>java-karaf_${projectTimeFile}</imageName>
							<imageDescription>base image of java with karaf ${karafFinalName}</imageDescription>

						</configuration>

						<executions>

							<execution>
								<id>stack-create</id>
								<phase>package</phase>
								<goals>
									<goal>cloud-formation-create</goal>
								</goals>
							</execution>

							<execution>
								<id>script-publish</id>
								<phase>package</phase>
								<goals>
									<goal>secure-shell-publish</goal>
								</goals>
								<configuration>
									<sshSource>${publishSource}</sshSource>
									<sshTarget>${publishTarget}</sshTarget>
									<sshStatusSuccess>
										<status>-1</status>
									</sshStatusSuccess>
								</configuration>
							</execution>

							<execution>
								<id>script-execute</id>
								<phase>package</phase>
								<goals>
									<goal>secure-shell-execute</goal>
								</goals>
								<configuration>
									<sshCommand>sudo bash ${publishInstall}</sshCommand>
									<sshStatusSuccess>
										<status>0</status>
									</sshStatusSuccess>
								</configuration>
							</execution>

							<execution>
								<id>image-register</id>
								<phase>package</phase>
								<goals>
									<goal>elastic-compute-image-register</goal>
								</goals>
							</execution>

							<execution>
								<id>stack-delete</id>
								<phase>package</phase>
								<goals>
									<goal>cloud-formation-delete</goal>
								</goals>
							</execution>

						</executions>

					</plugin>

				</plugins>

			</build>

		</profile>

	</profiles>

</project>
